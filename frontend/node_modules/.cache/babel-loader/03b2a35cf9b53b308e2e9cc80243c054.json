{"ast":null,"code":"// src/api.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000'; // Backend URL\n\n// Create Node\nexport const createNode = async nodeData => {\n  try {\n    const response = await axios.post(`${API_URL}/nodes`, nodeData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating node:', error);\n    throw error;\n  }\n};\n\n// Create Edge\nexport const createEdge = async edgeData => {\n  try {\n    const response = await axios.post(`${API_URL}/edges`, edgeData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating edge:', error);\n    throw error;\n  }\n};\n\n// Get Nodes\nexport const getNodes = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/nodes`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching nodes:', error);\n    throw error;\n  }\n};\n\n// Get Edges\nexport const getEdges = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/edges`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching edges:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","createNode","nodeData","response","post","data","error","console","createEdge","edgeData","getNodes","get","getEdges"],"sources":["C:/Users/anish/Desktop/Anibot/code/DEV/Graph Editor/frontend/src/api.js"],"sourcesContent":["// src/api.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000';  // Backend URL\r\n\r\n// Create Node\r\nexport const createNode = async (nodeData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/nodes`, nodeData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating node:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create Edge\r\nexport const createEdge = async (edgeData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/edges`, edgeData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating edge:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get Nodes\r\nexport const getNodes = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/nodes`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching nodes:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get Edges\r\nexport const getEdges = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/edges`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching edges:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAE;;AAE1C;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,QAAQ,EAAEE,QAAQ,CAAC;IAC/D,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,QAAQ,EAAES,QAAQ,CAAC;IAC/D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,QAAQ,CAAC;IACpD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,QAAQ,CAAC;IACpD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}