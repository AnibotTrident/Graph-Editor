{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anish\\\\Desktop\\\\Anibot\\\\code\\\\DEV\\\\Graph Editor\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nconst Node = ({\n  id,\n  label,\n  position,\n  onDragStart,\n  onDragEnd\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"node\",\n    style: {\n      left: `${position.x}px`,\n      top: `${position.y}px`,\n      position: 'absolute',\n      backgroundColor: '#4CAF50',\n      color: '#fff',\n      borderRadius: '10px',\n      padding: '10px 20px',\n      cursor: 'move'\n    },\n    onMouseDown: e => onDragStart(e, id),\n    onMouseUp: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, label);\n};\nconst Edge = ({\n  start,\n  end\n}) => {\n  const calculateLine = (start, end) => {\n    const x1 = start.x;\n    const y1 = start.y;\n    const x2 = end.x;\n    const y2 = end.y;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    const angle = Math.atan2(dy, dx) * (180 / Math.PI);\n    return {\n      width: length,\n      transform: `rotate(${angle}deg)`,\n      left: x1,\n      top: y1\n    };\n  };\n  const lineStyle = calculateLine(start, end);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      width: `${lineStyle.width}px`,\n      height: '2px',\n      backgroundColor: '#000',\n      transformOrigin: '0 0',\n      transform: lineStyle.transform,\n      left: `${lineStyle.left}px`,\n      top: `${lineStyle.top}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  });\n};\nconst App = () => {\n  const [nodes, setNodes] = useState([{\n    id: 1,\n    label: 'Node 1',\n    position: {\n      x: 100,\n      y: 100\n    }\n  }, {\n    id: 2,\n    label: 'Node 2',\n    position: {\n      x: 300,\n      y: 100\n    }\n  }]);\n  const [edges, setEdges] = useState([]);\n  const [draggingNode, setDraggingNode] = useState(null);\n  const graphContainerRef = useRef(null);\n  const handleNodeDragStart = (e, id) => {\n    setDraggingNode(id);\n  };\n  const handleNodeDragEnd = e => {\n    if (draggingNode !== null) {\n      const newX = e.clientX - 50; // Adjust for node width\n      const newY = e.clientY - 25; // Adjust for node height\n      setNodes(prevNodes => prevNodes.map(node => node.id === draggingNode ? {\n        ...node,\n        position: {\n          x: newX,\n          y: newY\n        }\n      } : node));\n      setDraggingNode(null);\n    }\n  };\n  const addNode = () => {\n    const newNode = {\n      id: nodes.length + 1,\n      label: `Node ${nodes.length + 1}`,\n      position: {\n        x: Math.random() * 500,\n        y: Math.random() * 500\n      }\n    };\n    setNodes([...nodes, newNode]);\n  };\n  const addEdge = (startNodeId, endNodeId) => {\n    const startNode = nodes.find(node => node.id === startNodeId);\n    const endNode = nodes.find(node => node.id === endNodeId);\n    if (startNode && endNode) {\n      setEdges([...edges, {\n        start: startNode.position,\n        end: endNode.position\n      }]);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph-editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Add Node\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addEdge(1, 2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, \"Add Edge\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph-container\",\n    ref: graphContainerRef,\n    onMouseMove: e => draggingNode && handleNodeDragEnd(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, edges.map((edge, index) => /*#__PURE__*/React.createElement(Edge, {\n    key: index,\n    start: edge.start,\n    end: edge.end,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), nodes.map(node => /*#__PURE__*/React.createElement(Node, {\n    key: node.id,\n    id: node.id,\n    label: node.label,\n    position: node.position,\n    onDragStart: handleNodeDragStart,\n    onDragEnd: handleNodeDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default App;","map":{"version":3,"names":["React","useState","useRef","Node","id","label","position","onDragStart","onDragEnd","createElement","className","style","left","x","top","y","backgroundColor","color","borderRadius","padding","cursor","onMouseDown","e","onMouseUp","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Edge","start","end","calculateLine","x1","y1","x2","y2","dx","dy","length","Math","sqrt","angle","atan2","PI","width","transform","lineStyle","height","transformOrigin","App","nodes","setNodes","edges","setEdges","draggingNode","setDraggingNode","graphContainerRef","handleNodeDragStart","handleNodeDragEnd","newX","clientX","newY","clientY","prevNodes","map","node","addNode","newNode","random","addEdge","startNodeId","endNodeId","startNode","find","endNode","onClick","ref","onMouseMove","edge","index","key"],"sources":["C:/Users/anish/Desktop/Anibot/code/DEV/Graph Editor/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './App.css';\r\n\r\nconst Node = ({ id, label, position, onDragStart, onDragEnd }) => {\r\n  return (\r\n    <div\r\n      className=\"node\"\r\n      style={{\r\n        left: `${position.x}px`,\r\n        top: `${position.y}px`,\r\n        position: 'absolute',\r\n        backgroundColor: '#4CAF50',\r\n        color: '#fff',\r\n        borderRadius: '10px',\r\n        padding: '10px 20px',\r\n        cursor: 'move',\r\n      }}\r\n      onMouseDown={(e) => onDragStart(e, id)}\r\n      onMouseUp={onDragEnd}\r\n    >\r\n      {label}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Edge = ({ start, end }) => {\r\n  const calculateLine = (start, end) => {\r\n    const x1 = start.x;\r\n    const y1 = start.y;\r\n    const x2 = end.x;\r\n    const y2 = end.y;\r\n    const dx = x2 - x1;\r\n    const dy = y2 - y1;\r\n    const length = Math.sqrt(dx * dx + dy * dy);\r\n    const angle = Math.atan2(dy, dx) * (180 / Math.PI);\r\n\r\n    return {\r\n      width: length,\r\n      transform: `rotate(${angle}deg)`,\r\n      left: x1,\r\n      top: y1,\r\n    };\r\n  };\r\n\r\n  const lineStyle = calculateLine(start, end);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        width: `${lineStyle.width}px`,\r\n        height: '2px',\r\n        backgroundColor: '#000',\r\n        transformOrigin: '0 0',\r\n        transform: lineStyle.transform,\r\n        left: `${lineStyle.left}px`,\r\n        top: `${lineStyle.top}px`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [nodes, setNodes] = useState([\r\n    { id: 1, label: 'Node 1', position: { x: 100, y: 100 } },\r\n    { id: 2, label: 'Node 2', position: { x: 300, y: 100 } },\r\n  ]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [draggingNode, setDraggingNode] = useState(null);\r\n  const graphContainerRef = useRef(null);\r\n\r\n  const handleNodeDragStart = (e, id) => {\r\n    setDraggingNode(id);\r\n  };\r\n\r\n  const handleNodeDragEnd = (e) => {\r\n    if (draggingNode !== null) {\r\n      const newX = e.clientX - 50; // Adjust for node width\r\n      const newY = e.clientY - 25; // Adjust for node height\r\n      setNodes((prevNodes) =>\r\n        prevNodes.map((node) =>\r\n          node.id === draggingNode ? { ...node, position: { x: newX, y: newY } } : node\r\n        )\r\n      );\r\n      setDraggingNode(null);\r\n    }\r\n  };\r\n\r\n  const addNode = () => {\r\n    const newNode = {\r\n      id: nodes.length + 1,\r\n      label: `Node ${nodes.length + 1}`,\r\n      position: { x: Math.random() * 500, y: Math.random() * 500 },\r\n    };\r\n    setNodes([...nodes, newNode]);\r\n  };\r\n\r\n  const addEdge = (startNodeId, endNodeId) => {\r\n    const startNode = nodes.find((node) => node.id === startNodeId);\r\n    const endNode = nodes.find((node) => node.id === endNodeId);\r\n\r\n    if (startNode && endNode) {\r\n      setEdges([...edges, { start: startNode.position, end: endNode.position }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph-editor\">\r\n      <button onClick={addNode}>Add Node</button>\r\n      <button onClick={() => addEdge(1, 2)}>Add Edge</button>\r\n      <div\r\n        className=\"graph-container\"\r\n        ref={graphContainerRef}\r\n        onMouseMove={(e) => draggingNode && handleNodeDragEnd(e)}\r\n      >\r\n        {edges.map((edge, index) => (\r\n          <Edge key={index} start={edge.start} end={edge.end} />\r\n        ))}\r\n        {nodes.map((node) => (\r\n          <Node\r\n            key={node.id}\r\n            id={node.id}\r\n            label={node.label}\r\n            position={node.position}\r\n            onDragStart={handleNodeDragStart}\r\n            onDragEnd={handleNodeDragEnd}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}