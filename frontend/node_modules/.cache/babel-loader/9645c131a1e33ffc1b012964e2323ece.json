{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anish\\\\Desktop\\\\Anibot\\\\code\\\\DEV\\\\Graph Editor\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport Node from './components/Node';\nimport Edge from './components/Edge';\nimport './App.css';\nconst App = () => {\n  const [nodes, setNodes] = useState([{\n    id: 1,\n    label: 'Node 1',\n    position: {\n      x: 100,\n      y: 100\n    }\n  }, {\n    id: 2,\n    label: 'Node 2',\n    position: {\n      x: 300,\n      y: 100\n    }\n  }]);\n  const [edges, setEdges] = useState([{\n    start: {\n      x: 100,\n      y: 100\n    },\n    end: {\n      x: 300,\n      y: 100\n    }\n  }]);\n  const handleNodeDrag = (e, id) => {\n    const newPosition = {\n      x: e.clientX - 50,\n      y: e.clientY - 25\n    };\n    setNodes(prevNodes => prevNodes.map(node => node.id === id ? {\n      ...node,\n      position: newPosition\n    } : node));\n  };\n  const addNode = () => {\n    const newNode = {\n      id: nodes.length + 1,\n      label: `Node ${nodes.length + 1}`,\n      position: {\n        x: Math.random() * 500,\n        y: Math.random() * 500\n      }\n    };\n    setNodes([...nodes, newNode]);\n  };\n  const addEdge = (startNodeId, endNodeId) => {\n    const startNode = nodes.find(node => node.id === startNodeId);\n    const endNode = nodes.find(node => node.id === endNodeId);\n    if (startNode && endNode) {\n      setEdges([...edges, {\n        start: startNode.position,\n        end: endNode.position\n      }]);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph-editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Add Node\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addEdge(1, 2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Add Edge\"), edges.map((edge, index) => /*#__PURE__*/React.createElement(Edge, {\n    key: index,\n    start: edge.start,\n    end: edge.end,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), nodes.map(node => /*#__PURE__*/React.createElement(Node, {\n    key: node.id,\n    id: node.id,\n    label: node.label,\n    position: node.position,\n    onDrag: handleNodeDrag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\nexport default App;","map":{"version":3,"names":["React","useState","Node","Edge","App","nodes","setNodes","id","label","position","x","y","edges","setEdges","start","end","handleNodeDrag","e","newPosition","clientX","clientY","prevNodes","map","node","addNode","newNode","length","Math","random","addEdge","startNodeId","endNodeId","startNode","find","endNode","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","edge","index","key","onDrag"],"sources":["C:/Users/anish/Desktop/Anibot/code/DEV/Graph Editor/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Node from './components/Node';\r\nimport Edge from './components/Edge';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [nodes, setNodes] = useState([\r\n    { id: 1, label: 'Node 1', position: { x: 100, y: 100 } },\r\n    { id: 2, label: 'Node 2', position: { x: 300, y: 100 } },\r\n  ]);\r\n\r\n  const [edges, setEdges] = useState([\r\n    { start: { x: 100, y: 100 }, end: { x: 300, y: 100 } },\r\n  ]);\r\n\r\n  const handleNodeDrag = (e, id) => {\r\n    const newPosition = { x: e.clientX - 50, y: e.clientY - 25 };\r\n    setNodes((prevNodes) =>\r\n      prevNodes.map((node) =>\r\n        node.id === id ? { ...node, position: newPosition } : node\r\n      )\r\n    );\r\n  };\r\n\r\n  const addNode = () => {\r\n    const newNode = {\r\n      id: nodes.length + 1,\r\n      label: `Node ${nodes.length + 1}`,\r\n      position: { x: Math.random() * 500, y: Math.random() * 500 },\r\n    };\r\n    setNodes([...nodes, newNode]);\r\n  };\r\n\r\n  const addEdge = (startNodeId, endNodeId) => {\r\n    const startNode = nodes.find((node) => node.id === startNodeId);\r\n    const endNode = nodes.find((node) => node.id === endNodeId);\r\n\r\n    if (startNode && endNode) {\r\n      setEdges([...edges, { start: startNode.position, end: endNode.position }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph-editor\">\r\n      <button onClick={addNode}>Add Node</button>\r\n      <button onClick={() => addEdge(1, 2)}>Add Edge</button>\r\n      {edges.map((edge, index) => (\r\n        <Edge key={index} start={edge.start} end={edge.end} />\r\n      ))}\r\n      {nodes.map((node) => (\r\n        <Node\r\n          key={node.id}\r\n          id={node.id}\r\n          label={node.label}\r\n          position={node.position}\r\n          onDrag={handleNodeDrag}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}